<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:CadViewer.UIControls"
                    xmlns:cvt="clr-namespace:CadViewer.Converters"
                    xmlns:if="clr-namespace:CadViewer.Interfaces"
                    xmlns:com="clr-namespace:CadViewer.Common"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">

    <DataTemplate DataType="{x:Type if:PropertyPaletteItemDoubleData}">
        <local:CInputBox com:EnterAsTabBehavior.IsEnabled="True" Height="20" InputType="Double" Text="{Binding Value}" HorizontalAlignment="Stretch" VerticalAlignment="Center" />
    </DataTemplate>
    <DataTemplate DataType="{x:Type if:PropertyPaletteItemIntegerData}">
        <local:CInputBox com:EnterAsTabBehavior.IsEnabled="True" Height="20" InputType="Integer" Text="{Binding Value}" HorizontalAlignment="Stretch" VerticalAlignment="Center" />
    </DataTemplate>
    <DataTemplate DataType="{x:Type if:PropertyPaletteItemStringData}">
        <local:CInputBox com:EnterAsTabBehavior.IsEnabled="True" Height="20" InputType="String" Text="{Binding Value}" HorizontalAlignment="Stretch" VerticalAlignment="Center" />
    </DataTemplate>
    <DataTemplate DataType="{x:Type if:PropertyPaletteItemColorData}">
        <local:CColorPicker com:EnterAsTabBehavior.IsEnabled="True" Height="20" SelectedColor="{Binding Value}" HorizontalAlignment="Stretch" VerticalAlignment="Center">
        </local:CColorPicker>
    </DataTemplate>
    <DataTemplate DataType="{x:Type if:PropertyPaletteItemSelectData}">
        <ComboBox com:EnterAsTabBehavior.IsEnabled="True" Height="20" SelectedIndex="{Binding Value, Mode=TwoWay}" ItemsSource="{Binding Items}"
                  HorizontalAlignment="Stretch" VerticalAlignment="Center" />
    </DataTemplate>

    <Style TargetType="{x:Type local:CPropertyPaletteItem}">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:CPropertyPaletteItem}">
                    <Border Margin="0,-1,0,0" BorderThickness="1" BorderBrush="#2e3440">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" SharedSizeGroup="NameGroup" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Border Grid.Column="0" BorderThickness="0,0,1,0" BorderBrush="#2e3440" VerticalAlignment="Center">
                                <TextBlock Height="18" Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="10,2" />
                            </Border>
                            <Border x:Name="PART_Expander" Margin="2,0,2,0" Grid.Column="1" VerticalAlignment="Center">
                                <ContentPresenter Content="{Binding}" />
                            </Border>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:CPropertyPalette}">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:CPropertyPalette}">
                    <Grid Margin="2" Grid.IsSharedSizeScope="True">
                        <ItemsPresenter />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:CPropertyPaletteGroup}">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:CPropertyPaletteGroup}">
                    <StackPanel >
                        <Border x:Name="PART_GroupBar" Margin="0,-1,0,0" BorderBrush="#2e3440" BorderThickness="1"
                                Background="LightGray" Height="23" Padding="2" VerticalAlignment="Center">
                            <DockPanel >
                                <ToggleButton x:Name="PART_GroupExpander" DockPanel.Dock="Right" Width="14"
                                              Style="{StaticResource ExpanderToggleButtonStyle}"
                                              IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                </ToggleButton>
                                <TextBlock x:Name="PART_GroupName" Text="{Binding Name}"
                                           SnapsToDevicePixels="True" UseLayoutRounding="True" VerticalAlignment="Center" Margin="5,0" />
                            </DockPanel>
                        </Border>
                        <Grid x:Name="PART_GroupContent" ClipToBounds="True">
                            <local:CSlideDownContainer IsTabStop="False" x:Name="SlideBox">
                                <ItemsControl x:Name="PART_Content" IsTabStop="False" ItemsSource="{Binding Items}">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <local:CPropertyPaletteItem Margin="20,0,0,0" DataContext="{Binding}" />
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </local:CSlideDownContainer>
                        </Grid>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsExpanded, RelativeSource={RelativeSource Self}}" Value="True">
                            <Setter TargetName="SlideBox" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsExpanded, RelativeSource={RelativeSource Self}}" Value="False">
                            <Setter TargetName="SlideBox" Property="Visibility" Value="Hidden" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>