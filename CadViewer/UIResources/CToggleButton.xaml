<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:CadViewer.UIControls"
                    xmlns:cvt="clr-namespace:CadViewer.Converters"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">
    <cvt:CommonHeightToCornerRadiusConverter x:Key="HeightToCornerRadiusConverter" />
    <cvt:ToggleButtonHeightToThumbWidthConverter x:Key="HeightToThumbWidthConverter" />
    <cvt:CommonSetDoubleDefaultConverter x:Key="SetDoubleDefaultConverter" />
    <cvt:ToggleButtonCheckNSelectColorConverter x:Key="ToggleButtonCheckNSelectColorConverter" />

    <ControlTemplate x:Key="xToggleButtonSwitchStyle" TargetType="{x:Type local:CToggleButton}">
        <Border x:Name="xCToggleButtonBorder" CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent},
                                        Path=Height, Converter={StaticResource HeightToCornerRadiusConverter}}">
            <Border.Background>
                <SolidColorBrush Color="{DynamicResource CompUI_ToggleBtn_BackgroundOnColor}" />
            </Border.Background>
            <Border.BorderBrush>
                <SolidColorBrush Color="Transparent" />
            </Border.BorderBrush>
            <Grid>
                <Border x:Name="xCToggleButtonThumb" Margin="3" Width="{Binding ActualHeight, RelativeSource={RelativeSource TemplatedParent},
                                             Converter={StaticResource HeightToThumbWidthConverter}}" Height="{Binding ActualHeight, RelativeSource={RelativeSource TemplatedParent},
                                             Converter={StaticResource HeightToThumbWidthConverter}}" CornerRadius="{Binding Height, RelativeSource={RelativeSource Self}, Converter={StaticResource HeightToCornerRadiusConverter}}">
                    <Border.Background>
                        <SolidColorBrush Color="{DynamicResource CompUI_ToggleBtn_ThumbOnColor}" />
                    </Border.Background>
                    <Border.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform x:Name="xScaleThumbTransform" ScaleX="1" ScaleY="1" />
                            <TranslateTransform x:Name="xTranThumbTransform" />
                        </TransformGroup>
                    </Border.RenderTransform>
                </Border>
                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
            </Grid>
            <Border.Triggers>
                <EventTrigger RoutedEvent="MouseEnter">
                    <EventTrigger.Actions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="xScaleThumbTransform" Storyboard.TargetProperty="ScaleX" To="1.2" Duration="0" />
                                <DoubleAnimation Storyboard.TargetName="xScaleThumbTransform" Storyboard.TargetProperty="ScaleY" To="1.2" Duration="0" />
                                <ColorAnimation Storyboard.TargetName="xCToggleButtonBorder" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Duration="0">
                                    <ColorAnimation.To>
                                        <MultiBinding Converter="{StaticResource ToggleButtonCheckNSelectColorConverter}">
                                            <Binding Path="IsChecked" RelativeSource="{RelativeSource TemplatedParent}" />
                                            <Binding>
                                                <Binding.Source>
                                                    <sys:String>CompUI_ToggleBtn_BackgroundOnOverColor</sys:String>
                                                </Binding.Source>
                                            </Binding>
                                            <Binding>
                                                <Binding.Source>
                                                    <sys:String>CompUI_ToggleBtn_BackgroundOffOverColor</sys:String>
                                                </Binding.Source>
                                            </Binding>
                                        </MultiBinding>
                                    </ColorAnimation.To>
                                </ColorAnimation>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger.Actions>
                </EventTrigger>
                <EventTrigger RoutedEvent="MouseLeave">
                    <EventTrigger.Actions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="xScaleThumbTransform" Storyboard.TargetProperty="ScaleX" To="1" Duration="0:0:0.1" />
                                <DoubleAnimation Storyboard.TargetName="xScaleThumbTransform" Storyboard.TargetProperty="ScaleY" To="1" Duration="0:0:0.1" />
                                <ColorAnimation Storyboard.TargetName="xCToggleButtonBorder" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Duration="0:0:0.2">
                                    <ColorAnimation.To>
                                        <MultiBinding Converter="{StaticResource ToggleButtonCheckNSelectColorConverter}">
                                            <Binding Path="IsChecked" RelativeSource="{RelativeSource TemplatedParent}" />
                                            <Binding>
                                                <Binding.Source>
                                                    <sys:String>CompUI_ToggleBtn_BackgroundOnColor</sys:String>
                                                </Binding.Source>
                                            </Binding>
                                            <Binding>
                                                <Binding.Source>
                                                    <sys:String>CompUI_ToggleBtn_BackgroundOffColor</sys:String>
                                                </Binding.Source>
                                            </Binding>
                                        </MultiBinding>
                                    </ColorAnimation.To>
                                </ColorAnimation>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger.Actions>
                </EventTrigger>
            </Border.Triggers>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="xCToggleButtonBorder" Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource CompUI_ToggleBtn_BackgroundOnColor}" />
                    </Setter.Value>
                </Setter>
                <Setter TargetName="xCToggleButtonBorder" Property="BorderThickness" Value="0" />
                <Setter TargetName="xCToggleButtonBorder" Property="BorderBrush">
                    <Setter.Value>
                        <SolidColorBrush Color="Transparent" />
                    </Setter.Value>
                </Setter>
                <Setter TargetName="xCToggleButtonThumb" Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource CompUI_ToggleBtn_ThumbOnColor}" />
                    </Setter.Value>
                </Setter>
                <Setter TargetName="xCToggleButtonThumb" Property="HorizontalAlignment" Value="Right" />
                <Setter TargetName="xCToggleButtonThumb" Property="RenderTransformOrigin" Value="1, 0.5" />
            </Trigger>
            <Trigger Property="IsChecked" Value="False">
                <Setter TargetName="xCToggleButtonBorder" Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource CompUI_ToggleBtn_BackgroundOffColor}" />
                    </Setter.Value>
                </Setter>
                <Setter TargetName="xCToggleButtonBorder" Property="BorderThickness" Value="1" />
                <Setter TargetName="xCToggleButtonBorder" Property="BorderBrush">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource CompUI_ToggleBtn_BorderColor}" />
                    </Setter.Value>
                </Setter>
                <Setter TargetName="xCToggleButtonThumb" Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource CompUI_ToggleBtn_ThumbOffColor}" />
                    </Setter.Value>
                </Setter>
                <Setter TargetName="xCToggleButtonThumb" Property="HorizontalAlignment" Value="Left" />
                <Setter TargetName="xCToggleButtonThumb" Property="RenderTransformOrigin" Value="0, 0.5" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="xToggleButtonSquareStyle" TargetType="{x:Type local:CToggleButton}">
        <Border x:Name="xCToggleButtonBorder" BorderThickness="1" CornerRadius="{DynamicResource CompUI_Cmm_CornerRadius}" Height="{TemplateBinding Height}">
            <Border.Background>
                <SolidColorBrush Color="{DynamicResource CompUI_ToggleBtn_BackgroundOffColor}" />
            </Border.Background>
            <Border.BorderBrush>
                <SolidColorBrush Color="{DynamicResource CompUI_Cmm_BorderColor}" />
            </Border.BorderBrush>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*" />
                    <ColumnDefinition Width="1*" />
                </Grid.ColumnDefinitions>
                <Border x:Name="PART_UnCheckBound" Grid.Column="0" Background="Transparent"
                        HorizontalAlignment="Stretch" VerticalAlignment="Stretch" CornerRadius="2,0,0,2">
                    <TextBlock Text="Val1" HorizontalAlignment="Center" VerticalAlignment="Center"></TextBlock>
                </Border>
                <Border x:Name="PART_CheckBound" Grid.Column="1" Background="Transparent" 
                        HorizontalAlignment="Stretch" VerticalAlignment="Stretch" CornerRadius="0,2,2,0">
                    <TextBlock Text="Val2" HorizontalAlignment="Center" VerticalAlignment="Center" ></TextBlock>
                </Border>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="PART_CheckBound" Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource CompUI_ToggleBtn_BackgroundOnColor}" />
                    </Setter.Value>
                </Setter>
                <Setter TargetName="PART_CheckBound" Property="TextElement.Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource CompUI_ToggleBtn_OnTextColor}" />
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsChecked" Value="False">
                <Setter TargetName="PART_UnCheckBound" Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource CompUI_ToggleBtn_BackgroundOnColor}" />
                    </Setter.Value>
                </Setter>
                <Setter TargetName="PART_UnCheckBound" Property="TextElement.Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource CompUI_ToggleBtn_OnTextColor}" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="xToggleButtonNormalStyle" TargetType="{x:Type local:CToggleButton}">
        <Border x:Name="xCToggleButtonBorder" CornerRadius="{DynamicResource CompUI_Cmm_CornerRadius}" BorderThickness="1" SnapsToDevicePixels="True">
            <Border.Background>
                <SolidColorBrush Color="{DynamicResource CompUI_ToggleBtn_BackgroundOnColor}" />
            </Border.Background>
            <Border.BorderBrush>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <LinearGradientBrush.GradientStops>
                        <GradientStopCollection>
                            <GradientStop Color="{DynamicResource CompUI_Cmm_BorderColor}" Offset="0.0" />
                            <GradientStop Color="{DynamicResource CompUI_Cmm_BorderColor}" Offset="0.9" />
                            <GradientStop Color="{DynamicResource CompUI_Cmm_BorderEndColor}" Offset="1.0" />
                        </GradientStopCollection>
                    </LinearGradientBrush.GradientStops>
                </LinearGradientBrush>
            </Border.BorderBrush>
            <DockPanel Margin="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <Image DockPanel.Dock="Left" x:Name="PART_Image" HorizontalAlignment="Center" VerticalAlignment="Center" Source="{TemplateBinding ImageSource}">
                    <Image.Width>
                        <MultiBinding Converter="{StaticResource SetDoubleDefaultConverter}">
                            <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="ImageWidth" />
                            <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Height" />
                        </MultiBinding>
                    </Image.Width>
                </Image>
                <Border x:Name="PART_Content" HorizontalAlignment="Center" VerticalAlignment="Center">
                    <ContentPresenter Margin="0,-1,0,0" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}"/>
                </Border>
            </DockPanel>
            <Border.Triggers>
                <EventTrigger RoutedEvent="MouseEnter">
                    <EventTrigger.Actions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetName="xCToggleButtonBorder"
                                                Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                Duration="0:0:0.2">
                                    <ColorAnimation.To>
                                        <MultiBinding Converter="{StaticResource ToggleButtonCheckNSelectColorConverter}">
                                            <Binding Path="IsChecked" RelativeSource="{RelativeSource TemplatedParent}" />
                                            <Binding>
                                                <Binding.Source>
                                                    <sys:String>CompUI_ToggleBtn_BackgroundOnOverColor</sys:String>
                                                </Binding.Source>
                                            </Binding>
                                            <Binding>
                                                <Binding.Source>
                                                    <sys:String>CompUI_ToggleBtn_BackgroundOffOver2Color</sys:String>
                                                </Binding.Source>
                                            </Binding>
                                        </MultiBinding>
                                    </ColorAnimation.To>
                                </ColorAnimation>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger.Actions>
                </EventTrigger>
                <EventTrigger RoutedEvent="MouseLeave">
                    <EventTrigger.Actions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetName="xCToggleButtonBorder" 
                                                Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                Duration="0:0:0.2">
                                    <ColorAnimation.To>
                                        <MultiBinding Converter="{StaticResource ToggleButtonCheckNSelectColorConverter}">
                                            <Binding Path="IsChecked" RelativeSource="{RelativeSource TemplatedParent}" />
                                            <Binding>
                                                <Binding.Source>
                                                    <sys:String>CompUI_ToggleBtn_BackgroundOnColor</sys:String>
                                                </Binding.Source>
                                            </Binding>
                                            <Binding>
                                                <Binding.Source>
                                                    <sys:String>CompUI_ToggleBtn_BackgroundOffColor</sys:String>
                                                </Binding.Source>
                                            </Binding>
                                        </MultiBinding>
                                    </ColorAnimation.To>
                                </ColorAnimation>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger.Actions>
                </EventTrigger>
            </Border.Triggers>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                </VisualStateGroup>
                <VisualStateGroup x:Name="CheckStatus">
                    <VisualState x:Name="Unchecked">
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                                            To="{DynamicResource CompUI_Cmm_TextColor}"
                                            Duration="0:0:0.2" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                                            To="White"
                                            Duration="0:0:0.2" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="xCToggleButtonBorder" Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource CompUI_ToggleBtn_BackgroundOnColor}" />
                    </Setter.Value>
                </Setter>
                <Setter TargetName="xCToggleButtonBorder" Property="BorderThickness" Value="0" />
                <Setter TargetName="xCToggleButtonBorder" Property="BorderBrush">
                    <Setter.Value>
                        <SolidColorBrush Color="Transparent" />
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsChecked" Value="False">
                <Setter TargetName="xCToggleButtonBorder" Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource CompUI_ToggleBtn_BackgroundOffColor}" />
                    </Setter.Value>
                </Setter>
                <Setter TargetName="xCToggleButtonBorder" Property="BorderThickness" Value="1" />
                <Setter TargetName="xCToggleButtonBorder" Property="BorderBrush">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource CompUI_ToggleBtn_BorderColor}" />
                    </Setter.Value>
                </Setter>
            </Trigger>
            <DataTrigger Binding="{Binding ImageSource, RelativeSource={RelativeSource Self}}" Value="{x:Null}">
                <Setter TargetName="PART_Image" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type local:CToggleButton}" BasedOn="{StaticResource {x:Type ToggleButton}}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding ButtonStyle, RelativeSource={RelativeSource Self}}" Value="Switch">
                <Setter Property="Template" Value="{StaticResource xToggleButtonSwitchStyle}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding ButtonStyle, RelativeSource={RelativeSource Self}}" Value="Normal">
                <Setter Property="Template" Value="{StaticResource xToggleButtonNormalStyle}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding ButtonStyle, RelativeSource={RelativeSource Self}}" Value="Square">
                <Setter Property="Template" Value="{StaticResource xToggleButtonSquareStyle}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>