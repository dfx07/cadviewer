<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:CadViewer.UIControls"
                    xmlns:cvt="clr-namespace:CadViewer.Converters"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">

    <cvt:CommonHeightToCornerRadiusConverter x:Key="HeightToCornerRadiusConverter" />
    <cvt:CommonBoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
    <cvt:CommonNumberToStringWithFormatConverter x:Key="NumberToStringWithFormatConverter" />
    <cvt:CommonSetDoubleDefaultConverter x:Key="SetDoubleDefaultConverter" />

    <Style TargetType="{x:Type local:CCheckBox}" BasedOn="{StaticResource {x:Type CheckBox}}">
        <Setter Property="Foreground" Value="{DynamicResource Cmm_TextColor}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:CCheckBox}">
                    <Grid Background="Transparent">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Border x:Name="xCheckBoxMarkBorder" Grid.Column="0" MaxWidth="60" CornerRadius="4" Margin="1" SnapsToDevicePixels="True">
                            <Border.Background>
                                <SolidColorBrush Color="{DynamicResource CompUI_CheckBox_BackgroundColor}" />
                            </Border.Background>
                            <Border.Width>
                                <MultiBinding Converter="{StaticResource SetDoubleDefaultConverter}">
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="CheckWidth" />
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="ActualHeight" />
                                </MultiBinding>
                            </Border.Width>
                            <Border.Height>
                                <MultiBinding Converter="{StaticResource SetDoubleDefaultConverter}">
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="CheckWidth" />
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="ActualHeight" />
                                </MultiBinding>
                            </Border.Height>
                            <Path x:Name="xCheckBoxCheckMark" Grid.Column="0" Data="M 0 5 L 4 9 L 10 1" Stroke="White" StrokeThickness="2"
                                  StrokeDashArray="25,25" Visibility="Collapsed" HorizontalAlignment="Center" VerticalAlignment="Center">
                            </Path>
                        </Border>
                        <Border x:Name="xCheckBoxMarkRoundBorder" Grid.Column="0" Background="Transparent" CornerRadius="{DynamicResource CompUI_Cmm_CornerRadius}" BorderThickness="1" SnapsToDevicePixels="True">
                            <Border.Width>
                                <MultiBinding Converter="{StaticResource SetDoubleDefaultConverter}">
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="CheckWidth" />
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="ActualHeight" />
                                </MultiBinding>
                            </Border.Width>
                            <Border.Height>
                                <MultiBinding Converter="{StaticResource SetDoubleDefaultConverter}">
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="CheckWidth" />
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="ActualHeight" />
                                </MultiBinding>
                            </Border.Height>
                            <Border.BorderBrush>
                                <SolidColorBrush Color="{DynamicResource CompUI_CheckBox_BorderColor}" />
                            </Border.BorderBrush>
                        </Border>
                        <ContentPresenter Grid.Column="1" Margin="5,2,5,2" VerticalAlignment="Center"></ContentPresenter>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal_Unchecked" />
                                <VisualState x:Name="Normal_Checked">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="xCheckBoxMarkBorder" 
                                                        Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                        To="{StaticResource CompUI_CheckBox_BackgroundCheckedColor}" Duration="0:0:0.2" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver_Unchecked">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="xCheckBoxMarkBorder" 
                                                        Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                        To="{DynamicResource CompUI_CheckBox_BackgroundOverColor}" Duration="0:0:0.1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver_Checked">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="xCheckBoxMarkBorder" 
                                                        Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" 
                                                        To="{DynamicResource CompUI_CheckBox_BackgroundCheckedOverColor}" Duration="0:0:0.1" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="xCheckBoxCheckMark"  Storyboard.TargetProperty="StrokeDashOffset" From="25" To="0" Duration="0:0:1" RepeatBehavior="1x" />
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="xCheckBoxCheckMark" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="xCheckBoxCheckMark" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="xCheckBoxMarkRoundBorder" Property="BorderBrush">
                                <Setter.Value>
                                    <SolidColorBrush Color="{DynamicResource CompUI_CheckBox_BackgroundCheckedColor}"></SolidColorBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="xCheckBoxMarkRoundBorder" Property="BorderBrush">
                                <Setter.Value>
                                    <SolidColorBrush Color="{DynamicResource CompUI_CheckBox_BorderColor}"></SolidColorBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>